#+title:spacemacs-basic
#+author: Zxrcoming
#+date: <2020-03-17 Tue>
* spacemacs-basic
** arrange layout
*** the reason using layout
    1. layout is good to organised your works when things get more and more.
    2. every layout has their own buffers, and that the logic level reason
*** the workflow
    1. The very Fist thing you need to do is : set layout with prefer name.
    2. for now, no need to get rid of the default layout.
    3. switch between smoothly, and focus on the main layout you're working on.
** project and navigation 
*** the reason using projet
    1. using git control your project is just easy, and spacemacs knows it's
       project when the version control is given.
    2. navigation is efficient when you have multiple projects to do.
    3. Always remember being smart to make your projects.
*** the workflow
    1. init projects with git.
    2. and navigation with keybindings
       | keybindings   | what it do                             |
       |---------------+----------------------------------------|
       | ~SPC + p + l~ | list some projects you want to switch  |
       | ~SPC + p + f~ | find files in the focused projet       |
       | ~SPC + p + b~ | switch to buffer in the focused projet |
    3. using buffers
       - using helm to search buffers ( helm is everywhere, it changes how spacemacs work based 
         on helm search)
       - may the helm force be with you.
** code editing
*** require   
    1. lsp, snippets, flycheck, auto-completion
    2. be nicely coding and peacefully thinking and you will be good to go
*** workflow                                                           
    1. using vim and spacemacs coding style to do the most powerful thing ever.
    2. searching and replace , goto defination, fast scroll, quick jumping(SPC j j/i)
    3. don't think too much about the configuration, you're more than that, just consentrate on your work, make it better.
*** test the lag and it's having lags which I will be dealing with later.

      ~the lag is gone when cost 71 RMB to get support for x410~
    
** remains to be solve
*** Chinese support (or every language support)
*** and learning how to grow with the spacemacs and happy hacking.
**** the logic of spacemacs:
***** layers
      - layers are load in the starup, which you make it for.(in the `.spacemacs/dotspacemacs-configuration-layers`
      - layers are a group of packages, so you can easily install layers to get you full featured.
      - it has a lazy install feature, lazy install other packages which isn't in you own layers.
***** help-system
      - spacemacs has a full functional help system. simple type `SPC h` and then you can see all the help you want.
      - features
        - help for .spacemacs and it's functions auto-jumping, see configuration in a second. ~SPC h .~
        - help for all layers you want to look up. ~SPC h l~
        - the help system has everything you need. from introduction, feature, install, configuration ...
        - even has man pages. ~SPC h m~
***** packages install
      - recommended using layers, the top of packages install and remove
      - spacemacs has a smart? configuration for installing packages like auto-delete, it can resolve conflicts of packages.
        But I will not use it because it's annoying me when I reload.
***** real time configuration
      - using help system to look it up and toggle.
***** easy workflow
      - using help system in a good, try different searching mode in different needs.
        - seaching variables using ~SPC h .(in .spacemacs)~ or ~SPC s j(for functions and variables)~
        - for projects based files. ~SPC /~ just good, and ~SPC p f~ is even better for not just text base file..
        - using time machine to work is funny. `org clock in` to start, and `org clock go to` to back to the time station.
** Test Some issues Working Remotely in WSL2 in Spacemacs. 
   1. the ~CPU~ Usage is in the range of =70% => 100%=
   2. and the RAM is constantly in the very small range of 50%, and always lower.
*** Issues
    1. When open browser for network searching, the ~CPU~ Usage is up to nearly 100% with 3.4~3.5GHz(my mathine is 2.80GHz in general).
    2. other hardware stuff remains nearly the same, no risk.
    3. when open my regular working app around, the ~CPU~ Usage is up to 100% for 10s or more, and goes down if nothing happens.
*** The workaround   
    1. waiting for the official upgrade in WSL2 performance.
    2. and slow yourself down to fixed the high performance of the running usage.
    3. Learn as much as you can to learn spacemacs cause doing so, one app, one OS, and ~CPU~ Usage goes down for long term.
       So, get yourself learning and thinking, ==> building and running.
    4. and remember the importance of high quality network which is much important for me, and the way I work and improve myself.
    5. remains to be seen.
** It will workout at the end when you just really want to learn everything you wish for.
   1. trust yourself.
   2. learning and building, then thinking and running.
   3. Peace Yourself.
** DONE For Now I still needs to learn more about it's usage. [2/3] [66%] 
     + [-] Org mode [1/3] [33%]
       - [ ] Org basic move and heading and structure.
       - [ ] Org agenda and Org capture.
       - [X] Org trick using vim style for editing:(general `action` + `motion` in vim style)
         - `= a r` for formating text, that great because org is about formating.
         - `v a e` for selecting code block. `v a r` for selecting a sub tree of org. after delay of the 'action`
         - `d a e` for delete code block. 

     + [X] How to use Emacs for daily life
     + [X] Using and buildin Emacs for you needs in a faster way as it says (~spacemacs~)

     #+begin_src python 
 import os

 print("ddd")
     #+end_src
 #+caption: test 
 | this 1 | this 2 | this 3 | this 4 |
 |--------+--------+--------+--------|
 |        |        |        |        |





 #+begin_src python
 print("test")
 #+end_src
